<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.report.dao.mapper.ReportInstanceMapper">

	<select id="getReportInstanceById" parameterType="java.lang.Long" resultType="codedriver.module.report.dto.ReportInstanceVo">
		SELECT
		`id`,
		`report_id` AS reportId,
		`name`,
		`visit_count` AS visitCount,
		`is_active` AS isActive,
		`config`,
		`fcu`,
		`lcu`,
		`fcd`,
		`lcd`
		FROM
		`reportinstance`
		WHERE id = #{value}
	</select>

	<select id="getReportInstanceAuthByReportInstanceId" parameterType="java.lang.Long" resultType="codedriver.module.report.dto.ReportInstanceAuthVo">
		SELECT
		`reportinstance_id` AS reportInstanceId,
		`type` AS authType,
		`auth_uuid` AS authUuid
		FROM
		`reportinstance_auth`
		WHERE
		reportinstance_id = #{value}
	</select>

	<sql id="searchReportInstanceCondition">
		JOIN
		`report` b ON a.report_id = b.id
		<if test="searchMode == 'user'">AND b.is_active = 1</if>
		<where>
			<if test="searchMode == 'user'">
				<choose>
					<when test="reportInstanceAuthList != null and reportInstanceAuthList.size() > 0">
						AND EXISTS (SELECT 1 FROM reportinstance_auth auth WHERE auth.reportinstance_id = a.id AND
						<foreach collection="reportInstanceAuthList" item="auth" open="(" separator="OR" close=")">
							(auth.type = #{auth.authType} AND auth.auth_uuid = #{auth.authUuid})
						</foreach>
						)
					</when>
					<otherwise>
						AND FALSE
					</otherwise>
				</choose>
			</if>
			<if test="keyword!=null and keyword != ''">
				AND a.name LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test="reportId !=null">
				AND a.report_id = #{reportId}
			</if>
			<if test="searchMode == 'user'">
				AND a.is_active = 1
			</if>
		</where>
	</sql>

	<select id="searchReportInstance" parameterType="codedriver.module.report.dto.ReportInstanceVo" resultType="codedriver.module.report.dto.ReportInstanceVo">
		SELECT
		a.`id`,
		a.`report_id` AS reportId,
		b.`name` AS reportName,
		a.`name`,
		a.`visit_count` AS visitCount,
		a.`is_active` AS isActive,
		a.`config`,
		a.`fcu`,
		a.`lcu`,
		a.`fcd`,
		a.`lcd`
		FROM
		`reportinstance` a
		<include refid="searchReportInstanceCondition"></include>
		ORDER BY a.id DESC
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<select id="searchReportInstanceCount" parameterType="codedriver.module.report.dto.ReportInstanceVo" resultType="int">
		SELECT
		count(a.id)
		FROM
		`reportinstance` a
		<include refid="searchReportInstanceCondition"></include>
	</select>

	<update id="updateReportInstance" parameterType="codedriver.module.report.dto.ReportInstanceVo">
		UPDATE
		`reportinstance`
		SET
		`report_id` = #{reportId},
		`name` = #{name},
		`is_active` = #{isActive},
		`config` = #{configStr},
		`lcu` = #{lcu},
		`lcd` = NOW()
		WHERE `id` = #{id}
	</update>

	<update id="updateReportInstanceActive" parameterType="codedriver.module.report.dto.ReportInstanceVo">
		UPDATE
		`reportinstance`
		SET
		`is_active` = #{isActive}
		WHERE `id` = #{id}
	</update>

	<insert id="insertReportInstanceAuth" parameterType="codedriver.module.report.dto.ReportInstanceAuthVo">
		INSERT INTO `reportinstance_auth` (
		`reportinstance_id`,
		`type`,
		`auth_uuid`
		)
		VALUES
		(
		#{reportInstanceId},
		#{authType},
		#{authUuid}
		)
	</insert>

	<insert id="insertReportInstance" parameterType="codedriver.module.report.dto.ReportInstanceVo">
		INSERT INTO `reportinstance` (
		`id`,
		`report_id`,
		`name`,
		`visit_count`,
		`is_active`,
		`config`,
		`fcu`,
		`fcd`
		)
		VALUES
		(
		#{id},
		#{reportId},
		#{name},
		0,
		#{isActive},
		#{configStr},
		#{fcu},
		NOW()
		)
	</insert>

	<delete id="deleteReportInstanceAuthByReportInstanceId" parameterType="java.lang.Long">
		DELETE
		FROM
		`reportinstance_auth`
		WHERE `reportinstance_id` = #{value}
	</delete>
</mapper>
