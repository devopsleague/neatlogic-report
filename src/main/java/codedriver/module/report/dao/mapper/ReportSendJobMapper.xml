<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.module.report.dao.mapper.ReportSendJobMapper">
    <select id="checkNameIsRepeat" parameterType="codedriver.module.report.dto.ReportSendJobVo" resultType="int">
		SELECT COUNT(1) FROM `report_send_job` WHERE `name` = #{name} AND `id` != #{id}
	</select>

	<select id="checkJobExists" parameterType="java.lang.Long" resultType="int" useCache="false">
		SELECT COUNT(1) FROM `report_send_job` WHERE  `id` = #{id}
	</select>

    <select id="getJobBaseInfoById" parameterType="java.lang.Long" resultType="codedriver.module.report.dto.ReportSendJobVo">
		SELECT
		`id`,
		`name`,
		`email_title` as `emailTitle`,
		`email_content` as `emailContent`,
		`cron`,
		`is_active` as `isActive`,
		`fcd`,
		`fcu`,
		`lcu`,
		`lcd`
		FROM `report_send_job`
		where `id` = #{id}
	</select>

	<resultMap id="ReportSendJobMap" type="codedriver.module.report.dto.ReportSendJobVo">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="isActive" column="isActive" />
		<result property="emailTitle" column="emailTitle" />
		<result property="emailContent" column="emailContent" />
		<result property="cron" column="cron" />
		<collection property="receiverList" ofType="codedriver.module.report.dto.ReportReceiverVo">
			<result property="receiver" column="receiver" />
			<result property="type" column="type" />
		</collection>
		<collection property="reportList" ofType="codedriver.module.report.dto.ReportSendJobRelationVo">
			<result property="reportSendJobId" column="reportSendJobId" />
			<result property="reportId" column="reportId" />
			<result property="condition" column="condition" />
		</collection>
	</resultMap>

	<select id="getJobById" parameterType="java.lang.Long" resultMap="ReportSendJobMap">
		SELECT
		a.`id`,
		a.`name`,
		a.`email_title` as `emailTitle`,
		a.`email_content` as `emailContent`,
		a.`cron`,
		a.`is_active` as `isActive`,
		b.`receiver`,
		b.`type`,
		c.`report_send_job_id` as reportSendJobId,
		c.`report_id` as reportId,
		c.`condition`
		FROM `report_send_job` a
		left join `report_receiver` b on a.`id` = b.`report_send_job_id`
		left join `report_send_job_relation` c on a.`id` = c.`report_send_job_id`
		where `id` = #{value}
	</select>

	<select id="searchJobCount" parameterType="codedriver.module.report.dto.ReportSendJobVo" resultType="int">
		SELECT
		COUNT(1)
		FROM
		`report_send_job`
		WHERE
		1=1
		<if test="keyword != null and keyword != ''">
			and `name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
	</select>

	<resultMap id="ReportSendJobListMap" type="codedriver.module.report.dto.ReportSendJobVo">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="isActive" column="isActive" />
		<result property="emailTitle" column="emailTitle" />
		<result property="cron" column="cron" />
		<result property="nextFireTime" column="nextFireTime" />
		<result property="execCount" column="execCount" />
		<collection property="scNameList" ofType="java.lang.String">
			<result property="receiver" column="receiver" />
		</collection>
	</resultMap>

	<select id="searchJob" parameterType="codedriver.module.report.dto.ReportSendJobVo" resultMap="ReportSendJobListMap">
		select
		a.`id`,
		a.`name`,
		a.`email_title` as emailTitle,
		a.`cron` as cron,
		a.`is_active` as isActive,
		(IFNULL((SELECT `user_name` FROM `user` WHERE `uuid` = b.`receiver`),b.`receiver`)) as receiver,
		c.`next_fire_time` as nextFireTime,
		c.`exec_count` as execCount
		from `report_send_job` a
		left join `report_receiver` b on a.`id` = b.`report_send_job_id`
		left join `schedule_job_status` c on a.`id` = c.`job_name`
		where 1=1 and b.`type` = 's'
		<if test="keyword != null and keyword != ''">
			and a.`name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
		order by a.`lcd` desc
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<resultMap id="ReportSendJobAuditMap" type="codedriver.module.report.dto.ReportSendJobAuditVo">
		<id property="id" column="id" />
		<result property="jobUuid" column="jobUuid" />
		<result property="startTime" column="startTime" />
		<result property="status" column="status" />
		<result property="serverId" column="serverId" />
		<result property="contentHash" column="contentHash" />
		<collection property="receiverList" ofType="java.lang.String">
			<result property="receiver" column="receiver" />
		</collection>
	</resultMap>

	<select id="searchReportSendJobAudit" parameterType="codedriver.framework.scheduler.dto.JobAuditVo" resultMap="ReportSendJobAuditMap">
		SELECT
		a.`id`,
		a.`job_uuid` AS jobUuid,
		a.`start_time` AS startTime,
		a.`status`,
		a.`server_id` AS serverId,
		a.`content_hash` AS contentHash,
		(IFNULL((SELECT `user_name` FROM `user` WHERE `uuid` = b.`receiver`),b.`receiver`)) as receiver
		FROM `schedule_job_audit` a
		left join `report_receiver` b on a.`job_uuid` = CONCAT(b.`report_send_job_id`,'')
		WHERE a.`job_uuid` = #{jobUuid} and b.`type` = 's'
		ORDER BY a.`id` DESC
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<select id="getAllActiveJob" resultType="codedriver.module.report.dto.ReportSendJobVo">
		select
		`id`,
		`cron`
		from `report_send_job`
		where `is_active` = 1
	</select>

	<select id="getRelatedReportById" parameterType="java.lang.Long" resultType="codedriver.module.report.dto.ReportSendJobRelationVo">
		select
		`report_send_job_id`,
		`report_id`,
		`condition`
		from `report_send_job_relation`
		where `report_send_job_id` = #{value}
	</select>

    <update id="updateJob" parameterType="codedriver.module.report.dto.ReportSendJobVo">
		UPDATE `report_send_job`
		SET
		`name` = #{name},
		`email_title` = #{emailTitle},
		`email_content` = #{emailContent},
		`cron` = #{cron},
		`is_active` = #{isActive},
		`lcu` = #{lcu},
		`lcd` = now()
		WHERE
		`id` = #{id}
	</update>

	<update id="updateJobStatus">
		update `report_send_job`
		set
		`is_active` = #{isActive},
		`lcu` = #{lcu},
		`lcd` = now()
		WHERE `id` = #{id}
	</update>

    <insert id="insertJob" parameterType="codedriver.module.report.dto.ReportSendJobVo">
		INSERT INTO `report_send_job`
		(
		`id`,
		`name`,
		`email_title`,
		`email_content`,
		`cron`,
		`is_active`,
		`fcd`,
		`fcu`,
		`lcu`,
		`lcd`
		) VALUES (
		#{id},
		#{name},
		#{emailTitle},
		#{emailContent},
		#{cron},
		#{isActive},
		now(),
		#{fcu},
		#{lcu},
		now()
		)
	</insert>

    <insert id="batchInsertReportReceiver" parameterType="java.util.List">
        INSERT INTO `report_receiver`(
        `report_send_job_id`,
        `receiver`,
        `type`
        )
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.reportSendJobId},
            #{item.receiver},
            #{item.type}
            )
        </foreach>
    </insert>

    <insert id="batchInsertReportRelation" parameterType="java.util.List">
        INSERT INTO `report_send_job_relation`(
        `report_send_job_id`,
        `report_id`,
        `condition`
        )
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.reportSendJobId},
            #{item.reportId},
            #{item.condition}
            )
        </foreach>
    </insert>

    <delete id="deleteReportReceiver" parameterType="java.lang.Long">
        delete
        from `report_receiver`
        where `report_send_job_id` = #{value}
    </delete>

    <delete id="deleteReportRelation" parameterType="java.lang.Long">
        delete
        from `report_send_job_relation`
        where `report_send_job_id` = #{value}
    </delete>

	<delete id="deleteJobById" parameterType="java.lang.Long">
        delete
        from `report_send_job`
        where `id` = #{id}
    </delete>
</mapper>
